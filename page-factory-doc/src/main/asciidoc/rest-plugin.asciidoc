== Rest plugin

Плагин для автоматизации API приложений, базирующийся на `rest-assured` и `cucumber`

Основная идея заключается в том, что каждый метод API описывается отдельным классом, в котором есть поля запроса и методы валидации

В качестве паттерна проектирования взят PageObject. Перекладывая идеи этого паттерна с GUI тестирования, на тестирование API для каждого метода API в приложении с автотестами создается свой класс, где описываются нужные поля запроса и методы валидации. Основное преимущество данного паттерна - это простота поддержки автотестов, ведь в случае изменения полей объекта API, изменения нужно внести в одном месте, где он описан.

Использование же BDD позволяет писать сценарии автоматизированного тестирования на человекочитаемом языке, что позволяет понизить входной порог для разработчиков автотестов, и позволяет людям, не знакомым с языками программирования и автоматизацией тестирования, понять и воспроизвести шаги автотеста в ручную.

:plug: rest-plugin

include::web_how_to_start.asciidoc[]

В файле `application.properties` в параметре `api.baseURI` прописать путь тестируемого приложения. Например:

[source,]
----
api.baseURI = http://api.com
----

include::rest_entries.asciidoc[]

include::rest_send.asciidoc[]

include::rest_entries_param.asciidoc[]

include::rest_entries_param_modificators.asciidoc[]

include::rest_verify.asciidoc[]

include::rest_build_request.asciidoc[]

include::rest_steps_en.asciidoc[]

include::rest_properties.asciidoc[]

=== SSL
Включить упрощенную схему работы с ssl можно следующим образом:
[source,]
----
api.ssl.relaxed = true
----

Подробнее об этом можно узнать в документации https://github.com/rest-assured/rest-assured/wiki/Usage#ssl[rest-assured^, role="ext-link"]

=== Филтрация запросов
Фильтр позволяет проверять и изменять запрос до того, как он будет отправлен, а также проверять и изменять ответ до того, как он вернется. Фильтры можно использовать для реализации пользовательских схем аутентификации, управления сеансами, ведения журналов и т. д. Чтобы создать фильтр, вам необходимо реализовать интерфейс `io.restassured.filter.Filter`
Чтобы использовать фильтр, вы можете указать в параметре классы фильтров (если несколько, то необходимо указывать через запятую):

[source,]
----
api.request.filters = ru.sbtqa.tag.api.TestFilter
----

Подробнее об этом можно узнать в документации https://github.com/rest-assured/rest-assured/wiki/Usage#filters[rest-assured^, role="ext-link"]


